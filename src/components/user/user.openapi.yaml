paths:
  /users:
    post:
      tags: [User]
      summary: Create a new user
      description: Create a new user
      security:
        - []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
            example:
              firstName: Mo
              lastName: Ihab
              dob: 2023-12-01
              email: mo@example.com
              password: pass
        required: true
      responses:
        201:
          description: Success
        400:
          description: Failed
        500:
          description: Failed
  /users/{id}:
    get:
      tags: [User]
      summary: Get a user by id
      description: Get a user by id
      parameters:
        - $ref: '#/components/parameters/global-id'
      responses:
        200:
          description: Success
          content:
            application/schema:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
        500:
          description: Failed
    patch:
      tags: [User]
      summary: Update a user
      description: Update a user
      parameters:
        - $ref: '#/components/parameters/global-id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Success
        400:
          description: Failed
        404:
          description: User not found
        500:
          description: Failed
    delete:
      tags: [User]
      summary: Delete a user
      description: Delete a user
      parameters:
        - $ref: '#/components/parameters/global-id'
      responses:
        200:
          description: Success
        404:
          description: User not found
        500:
          description: Failed
  /users/search:
    post:
      tags: [User]
      summary: Find users
      description: Find users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchUsers'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        400:
          description: Failed
        500:
          description: Failed

components:
  schemas:
    CreateUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dob:
          type: string
          format: date
        email:
          type: string
        userPassword:
          type: string
      required: [firstName, lastName, dob, email, userPassword]
    User:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dob:
          type: string
          format: date
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    SearchUsers:
      type: object
      properties:
        select:
          type: array
          items:
            $ref: '#/components/x-user-variables/userColumns'
        filter:
          type: object
          properties:
            ids:
              type: array
              items:
                type: number
            emails:
              type: array
              items:
                type: string
        paginate:
          $ref: '#/components/x-global-variables/searchPaginate'
        sort:
          type: array
          items:
            type: object
            properties:
              orderBy:
                $ref: '#/components/x-user-variables/userColumns'
              sortOrder:
                $ref: '#/components/x-global-variables/searchSortOrder'
    UpdateUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dob:
          type: string
          format: date
        email:
          type: string
        userPassword:
          type: string
      required: [firstName, lastName, dob, email, userPassword]
  x-user-variables:
    userColumns:
      type: string
      enum: [firstName, lastName, email, dob]
